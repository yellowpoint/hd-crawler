// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("aliyundb") // uses connection pooling
}

// datasource db {
//   provider = "sqlite"
//   url      = "file:./dev.db"
// }

model Crawler {
  id        Int      @id @default(autoincrement())
  url       String
  title     String?
  html      String?
  type      String?
  subPages  String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model google {
  id             Int      @id @default(autoincrement())
  keyword        String   @unique
  level          Int?
  parentKeywords String?
  content        String
  createdAt      DateTime @default(now())
}

model base {
  id        Int      @id @default(autoincrement())
  url       String   @unique
  content   String
  createdAt DateTime @default(now())
}

model ai {
  id        Int      @id @default(autoincrement())
  llm       String
  prompt    String
  input     String
  output    String?
  createdAt DateTime @default(now())
}

model Prompt {
  id        Int             @id @default(autoincrement())
  name      String          @unique
  content   String
  createdAt DateTime        @default(now())
  histories PromptHistory[]
}

model PromptHistory {
  id        Int      @id @default(autoincrement())
  promptId  Int
  content   String
  createdAt DateTime @default(now())

  prompt Prompt @relation(fields: [promptId], references: [id], onDelete: Cascade)
}

model Flow {
  id        Int           @id @default(autoincrement())
  name      String        @unique
  content   String
  createdAt DateTime      @default(now())
  histories FlowHistory[]
  records   FlowRecord[]
}

model FlowHistory {
  id        Int      @id @default(autoincrement())
  flowId    Int
  content   String
  createdAt DateTime @default(now())

  Flow Flow @relation(fields: [flowId], references: [id], onDelete: Cascade)
}

model FlowRecord {
  id        Int      @id @default(autoincrement())
  flowId    Int
  content   String
  createdAt DateTime @default(now())

  Flow Flow @relation(fields: [flowId], references: [id], onDelete: Cascade)
}
